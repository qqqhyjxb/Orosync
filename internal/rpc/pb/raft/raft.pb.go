// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: internal/rpc/proto/raft.proto

package raft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendUAVInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uav           *UAVInfo               `protobuf:"bytes,1,opt,name=uav,proto3" json:"uav,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendUAVInfoReq) Reset() {
	*x = SendUAVInfoReq{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendUAVInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUAVInfoReq) ProtoMessage() {}

func (x *SendUAVInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUAVInfoReq.ProtoReflect.Descriptor instead.
func (*SendUAVInfoReq) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{0}
}

func (x *SendUAVInfoReq) GetUav() *UAVInfo {
	if x != nil {
		return x.Uav
	}
	return nil
}

// 无人机信息
type UAVInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Time          string                 `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Port          string                 `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	Position      *Position              `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Battery       *Battery               `protobuf:"bytes,6,opt,name=battery,proto3" json:"battery,omitempty"`
	Cpu           *CPUInfo               `protobuf:"bytes,7,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryInfo            `protobuf:"bytes,8,opt,name=memory,proto3" json:"memory,omitempty"`
	Network       *NetWorkInfo           `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
	Tasks         []*Task                `protobuf:"bytes,10,rep,name=tasks,proto3" json:"tasks,omitempty"` //当前这正负载所有无人机的信息
	Status        string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UAVInfo) Reset() {
	*x = UAVInfo{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UAVInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UAVInfo) ProtoMessage() {}

func (x *UAVInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UAVInfo.ProtoReflect.Descriptor instead.
func (*UAVInfo) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{1}
}

func (x *UAVInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UAVInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UAVInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UAVInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *UAVInfo) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UAVInfo) GetBattery() *Battery {
	if x != nil {
		return x.Battery
	}
	return nil
}

func (x *UAVInfo) GetCpu() *CPUInfo {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *UAVInfo) GetMemory() *MemoryInfo {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *UAVInfo) GetNetwork() *NetWorkInfo {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *UAVInfo) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *UAVInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 任务信息
type Task struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                                          //任务ID
	Type           string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                                             //任务类型，分为abcd四种，a为电量密集型，b为计算密集型，c表示内存密集型，d表示同意网络密集型
	Priority       int32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`                                                                    //任务优先级
	RequiredCpu    float32                `protobuf:"fixed32,4,opt,name=required_cpu,json=requiredCpu,proto3" json:"required_cpu,omitempty"`                                          // 任务执行所需的最低CPU能力
	CpuUsage       float32                `protobuf:"fixed32,5,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                                                   //任务执行cpu占比
	RequiredMemory float32                `protobuf:"fixed32,6,opt,name=required_memory,json=requiredMemory,proto3" json:"required_memory,omitempty"`                                 // 任务执行所需的最低内存
	Cost           map[string]float32     `protobuf:"bytes,7,rep,name=cost,proto3" json:"cost,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // 资源消耗速率（每秒消耗电量）
	Target         *Position              `protobuf:"bytes,8,opt,name=target,proto3" json:"target,omitempty"`                                                                         // 目标位置（格式："x,y,z"）
	TaskParents    []int32                `protobuf:"varint,9,rep,packed,name=task_parents,json=taskParents,proto3" json:"task_parents,omitempty"`
	TaskChildren   []int32                `protobuf:"varint,10,rep,packed,name=task_children,json=taskChildren,proto3" json:"task_children,omitempty"`
	Status         string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`     //任务状态0表示未开始，1表示已分配，2表示进行中，3表示已完成
	Duration       string                 `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty"` //任务持续时间
	Surplus        string                 `protobuf:"bytes,13,opt,name=surplus,proto3" json:"surplus,omitempty"`   //任务剩余时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Task) GetRequiredCpu() float32 {
	if x != nil {
		return x.RequiredCpu
	}
	return 0
}

func (x *Task) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *Task) GetRequiredMemory() float32 {
	if x != nil {
		return x.RequiredMemory
	}
	return 0
}

func (x *Task) GetCost() map[string]float32 {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Task) GetTarget() *Position {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Task) GetTaskParents() []int32 {
	if x != nil {
		return x.TaskParents
	}
	return nil
}

func (x *Task) GetTaskChildren() []int32 {
	if x != nil {
		return x.TaskChildren
	}
	return nil
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Task) GetSurplus() string {
	if x != nil {
		return x.Surplus
	}
	return ""
}

// 位置信息
type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{3}
}

func (x *Position) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Position) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// 电池状态
type Battery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capacity      float32                `protobuf:"fixed32,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Battery) Reset() {
	*x = Battery{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Battery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Battery) ProtoMessage() {}

func (x *Battery) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Battery.ProtoReflect.Descriptor instead.
func (*Battery) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{4}
}

func (x *Battery) GetCapacity() float32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

// cpu状态
type CPUInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Capacity        float32                `protobuf:"fixed32,1,opt,name=capacity,proto3" json:"capacity,omitempty"`                                      // 最大资源
	SurplusCapacity float32                `protobuf:"fixed32,2,opt,name=surplus_capacity,json=surplusCapacity,proto3" json:"surplus_capacity,omitempty"` // 剩余资源
	UsageRate       float32                `protobuf:"fixed32,3,opt,name=usage_rate,json=usageRate,proto3" json:"usage_rate,omitempty"`                   // 剩余资源
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CPUInfo) Reset() {
	*x = CPUInfo{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo) ProtoMessage() {}

func (x *CPUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo.ProtoReflect.Descriptor instead.
func (*CPUInfo) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{5}
}

func (x *CPUInfo) GetCapacity() float32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CPUInfo) GetSurplusCapacity() float32 {
	if x != nil {
		return x.SurplusCapacity
	}
	return 0
}

func (x *CPUInfo) GetUsageRate() float32 {
	if x != nil {
		return x.UsageRate
	}
	return 0
}

// 内存内存
type MemoryInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Capacity        float32                `protobuf:"fixed32,1,opt,name=capacity,proto3" json:"capacity,omitempty"`                                      // 最大资源
	SurplusCapacity float32                `protobuf:"fixed32,2,opt,name=surplus_capacity,json=surplusCapacity,proto3" json:"surplus_capacity,omitempty"` // 剩余资源
	UsageRate       float32                `protobuf:"fixed32,3,opt,name=usage_rate,json=usageRate,proto3" json:"usage_rate,omitempty"`                   // 使用率
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MemoryInfo) Reset() {
	*x = MemoryInfo{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryInfo) ProtoMessage() {}

func (x *MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryInfo.ProtoReflect.Descriptor instead.
func (*MemoryInfo) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{6}
}

func (x *MemoryInfo) GetCapacity() float32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *MemoryInfo) GetSurplusCapacity() float32 {
	if x != nil {
		return x.SurplusCapacity
	}
	return 0
}

func (x *MemoryInfo) GetUsageRate() float32 {
	if x != nil {
		return x.UsageRate
	}
	return 0
}

// 网络状态
type NetWorkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bandwidth     float32                `protobuf:"fixed32,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"` // 带宽
	Delay         float32                `protobuf:"fixed32,2,opt,name=delay,proto3" json:"delay,omitempty"`         // 延迟
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetWorkInfo) Reset() {
	*x = NetWorkInfo{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetWorkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetWorkInfo) ProtoMessage() {}

func (x *NetWorkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetWorkInfo.ProtoReflect.Descriptor instead.
func (*NetWorkInfo) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{7}
}

func (x *NetWorkInfo) GetBandwidth() float32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *NetWorkInfo) GetDelay() float32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type SendUAVInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	LeaderUid     string                 `protobuf:"bytes,2,opt,name=leader_uid,json=leaderUid,proto3" json:"leader_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendUAVInfoResp) Reset() {
	*x = SendUAVInfoResp{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendUAVInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUAVInfoResp) ProtoMessage() {}

func (x *SendUAVInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUAVInfoResp.ProtoReflect.Descriptor instead.
func (*SendUAVInfoResp) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{8}
}

func (x *SendUAVInfoResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SendUAVInfoResp) GetLeaderUid() string {
	if x != nil {
		return x.LeaderUid
	}
	return ""
}

// leader: 日志分发
type AppendLogReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderUid     string                 `protobuf:"bytes,2,opt,name=leader_uid,json=leaderUid,proto3" json:"leader_uid,omitempty"`
	PrevLogIndex  int64                  `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm   int64                  `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Logs          *LogsInfo              `protobuf:"bytes,5,opt,name=logs,proto3" json:"logs,omitempty"`
	LeaderCommit  int64                  `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendLogReq) Reset() {
	*x = AppendLogReq{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendLogReq) ProtoMessage() {}

func (x *AppendLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendLogReq.ProtoReflect.Descriptor instead.
func (*AppendLogReq) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{9}
}

func (x *AppendLogReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendLogReq) GetLeaderUid() string {
	if x != nil {
		return x.LeaderUid
	}
	return ""
}

func (x *AppendLogReq) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendLogReq) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendLogReq) GetLogs() *LogsInfo {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *AppendLogReq) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type LogsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	UidList       []string               `protobuf:"bytes,3,rep,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	UavMap        map[string]*UAVInfo    `protobuf:"bytes,4,rep,name=uav_map,json=uavMap,proto3" json:"uav_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsInfo) Reset() {
	*x = LogsInfo{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsInfo) ProtoMessage() {}

func (x *LogsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsInfo.ProtoReflect.Descriptor instead.
func (*LogsInfo) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{10}
}

func (x *LogsInfo) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *LogsInfo) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LogsInfo) GetUidList() []string {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *LogsInfo) GetUavMap() map[string]*UAVInfo {
	if x != nil {
		return x.UavMap
	}
	return nil
}

type AppendLogResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Term          int64                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LeaderUid     string                 `protobuf:"bytes,3,opt,name=leader_uid,json=leaderUid,proto3" json:"leader_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendLogResp) Reset() {
	*x = AppendLogResp{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendLogResp) ProtoMessage() {}

func (x *AppendLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendLogResp.ProtoReflect.Descriptor instead.
func (*AppendLogResp) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{11}
}

func (x *AppendLogResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppendLogResp) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendLogResp) GetLeaderUid() string {
	if x != nil {
		return x.LeaderUid
	}
	return ""
}

type VoteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateUid  string                 `protobuf:"bytes,2,opt,name=candidate_uid,json=candidateUid,proto3" json:"candidate_uid,omitempty"`
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   int64                  `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteReq) Reset() {
	*x = VoteReq{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteReq) ProtoMessage() {}

func (x *VoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteReq.ProtoReflect.Descriptor instead.
func (*VoteReq) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{12}
}

func (x *VoteReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteReq) GetCandidateUid() string {
	if x != nil {
		return x.CandidateUid
	}
	return ""
}

func (x *VoteReq) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *VoteReq) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type VoteResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderUid     string                 `protobuf:"bytes,2,opt,name=leader_uid,json=leaderUid,proto3" json:"leader_uid,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,3,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResp) Reset() {
	*x = VoteResp{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResp) ProtoMessage() {}

func (x *VoteResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResp.ProtoReflect.Descriptor instead.
func (*VoteResp) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{13}
}

func (x *VoteResp) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteResp) GetLeaderUid() string {
	if x != nil {
		return x.LeaderUid
	}
	return ""
}

func (x *VoteResp) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type GlobalLoadBalanceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskList      []*Task                `protobuf:"bytes,1,rep,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalLoadBalanceReq) Reset() {
	*x = GlobalLoadBalanceReq{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalLoadBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalLoadBalanceReq) ProtoMessage() {}

func (x *GlobalLoadBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalLoadBalanceReq.ProtoReflect.Descriptor instead.
func (*GlobalLoadBalanceReq) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{14}
}

func (x *GlobalLoadBalanceReq) GetTaskList() []*Task {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type GlobalLoadBalanceResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalLoadBalanceResp) Reset() {
	*x = GlobalLoadBalanceResp{}
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalLoadBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalLoadBalanceResp) ProtoMessage() {}

func (x *GlobalLoadBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_raft_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalLoadBalanceResp.ProtoReflect.Descriptor instead.
func (*GlobalLoadBalanceResp) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_raft_proto_rawDescGZIP(), []int{15}
}

func (x *GlobalLoadBalanceResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_internal_rpc_proto_raft_proto protoreflect.FileDescriptor

const file_internal_rpc_proto_raft_proto_rawDesc = "" +
	"\n" +
	"\x1dinternal/rpc/proto/raft.proto\x12\x04raft\"1\n" +
	"\x0eSendUAVInfoReq\x12\x1f\n" +
	"\x03uav\x18\x01 \x01(\v2\r.raft.UAVInfoR\x03uav\"\xe4\x02\n" +
	"\aUAVInfo\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x12\n" +
	"\x04time\x18\x02 \x01(\tR\x04time\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x04 \x01(\tR\x04port\x12*\n" +
	"\bposition\x18\x05 \x01(\v2\x0e.raft.PositionR\bposition\x12'\n" +
	"\abattery\x18\x06 \x01(\v2\r.raft.BatteryR\abattery\x12\x1f\n" +
	"\x03cpu\x18\a \x01(\v2\r.raft.CPUInfoR\x03cpu\x12(\n" +
	"\x06memory\x18\b \x01(\v2\x10.raft.MemoryInfoR\x06memory\x12+\n" +
	"\anetwork\x18\t \x01(\v2\x11.raft.NetWorkInfoR\anetwork\x12 \n" +
	"\x05tasks\x18\n" +
	" \x03(\v2\n" +
	".raft.TaskR\x05tasks\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\"\xd9\x03\n" +
	"\x04Task\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x05R\bpriority\x12!\n" +
	"\frequired_cpu\x18\x04 \x01(\x02R\vrequiredCpu\x12\x1b\n" +
	"\tcpu_usage\x18\x05 \x01(\x02R\bcpuUsage\x12'\n" +
	"\x0frequired_memory\x18\x06 \x01(\x02R\x0erequiredMemory\x12(\n" +
	"\x04cost\x18\a \x03(\v2\x14.raft.Task.CostEntryR\x04cost\x12&\n" +
	"\x06target\x18\b \x01(\v2\x0e.raft.PositionR\x06target\x12!\n" +
	"\ftask_parents\x18\t \x03(\x05R\vtaskParents\x12#\n" +
	"\rtask_children\x18\n" +
	" \x03(\x05R\ftaskChildren\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\x12\x1a\n" +
	"\bduration\x18\f \x01(\tR\bduration\x12\x18\n" +
	"\asurplus\x18\r \x01(\tR\asurplus\x1a7\n" +
	"\tCostEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"4\n" +
	"\bPosition\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\"%\n" +
	"\aBattery\x12\x1a\n" +
	"\bcapacity\x18\x01 \x01(\x02R\bcapacity\"o\n" +
	"\aCPUInfo\x12\x1a\n" +
	"\bcapacity\x18\x01 \x01(\x02R\bcapacity\x12)\n" +
	"\x10surplus_capacity\x18\x02 \x01(\x02R\x0fsurplusCapacity\x12\x1d\n" +
	"\n" +
	"usage_rate\x18\x03 \x01(\x02R\tusageRate\"r\n" +
	"\n" +
	"MemoryInfo\x12\x1a\n" +
	"\bcapacity\x18\x01 \x01(\x02R\bcapacity\x12)\n" +
	"\x10surplus_capacity\x18\x02 \x01(\x02R\x0fsurplusCapacity\x12\x1d\n" +
	"\n" +
	"usage_rate\x18\x03 \x01(\x02R\tusageRate\"A\n" +
	"\vNetWorkInfo\x12\x1c\n" +
	"\tbandwidth\x18\x01 \x01(\x02R\tbandwidth\x12\x14\n" +
	"\x05delay\x18\x02 \x01(\x02R\x05delay\"D\n" +
	"\x0fSendUAVInfoResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x1d\n" +
	"\n" +
	"leader_uid\x18\x02 \x01(\tR\tleaderUid\"\xd4\x01\n" +
	"\fAppendLogReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1d\n" +
	"\n" +
	"leader_uid\x18\x02 \x01(\tR\tleaderUid\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x03R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x03R\vprevLogTerm\x12\"\n" +
	"\x04logs\x18\x05 \x01(\v2\x0e.raft.LogsInfoR\x04logs\x12#\n" +
	"\rleader_commit\x18\x06 \x01(\x03R\fleaderCommit\"\xd0\x01\n" +
	"\bLogsInfo\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x03R\x05index\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x12\x19\n" +
	"\buid_list\x18\x03 \x03(\tR\auidList\x123\n" +
	"\auav_map\x18\x04 \x03(\v2\x1a.raft.LogsInfo.UavMapEntryR\x06uavMap\x1aH\n" +
	"\vUavMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\x05value\x18\x02 \x01(\v2\r.raft.UAVInfoR\x05value:\x028\x01\"V\n" +
	"\rAppendLogResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x03R\x04term\x12\x1d\n" +
	"\n" +
	"leader_uid\x18\x03 \x01(\tR\tleaderUid\"\x8c\x01\n" +
	"\aVoteReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12#\n" +
	"\rcandidate_uid\x18\x02 \x01(\tR\fcandidateUid\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x03R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x03R\vlastLogTerm\"`\n" +
	"\bVoteResp\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1d\n" +
	"\n" +
	"leader_uid\x18\x02 \x01(\tR\tleaderUid\x12!\n" +
	"\fvote_granted\x18\x03 \x01(\bR\vvoteGranted\"?\n" +
	"\x14GlobalLoadBalanceReq\x12'\n" +
	"\ttask_list\x18\x01 \x03(\v2\n" +
	".raft.TaskR\btaskList\"+\n" +
	"\x15GlobalLoadBalanceResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code2\xf4\x01\n" +
	"\vRaftService\x12:\n" +
	"\vSendUAVInfo\x12\x14.raft.SendUAVInfoReq\x1a\x15.raft.SendUAVInfoResp\x124\n" +
	"\tAppendLog\x12\x12.raft.AppendLogReq\x1a\x13.raft.AppendLogResp\x12%\n" +
	"\x04Vote\x12\r.raft.VoteReq\x1a\x0e.raft.VoteResp\x12L\n" +
	"\x11GlobalLoadBalance\x12\x1a.raft.GlobalLoadBalanceReq\x1a\x1b.raft.GlobalLoadBalanceRespB\tZ\a./raft;b\x06proto3"

var (
	file_internal_rpc_proto_raft_proto_rawDescOnce sync.Once
	file_internal_rpc_proto_raft_proto_rawDescData []byte
)

func file_internal_rpc_proto_raft_proto_rawDescGZIP() []byte {
	file_internal_rpc_proto_raft_proto_rawDescOnce.Do(func() {
		file_internal_rpc_proto_raft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_rpc_proto_raft_proto_rawDesc), len(file_internal_rpc_proto_raft_proto_rawDesc)))
	})
	return file_internal_rpc_proto_raft_proto_rawDescData
}

var file_internal_rpc_proto_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_internal_rpc_proto_raft_proto_goTypes = []any{
	(*SendUAVInfoReq)(nil),        // 0: raft.SendUAVInfoReq
	(*UAVInfo)(nil),               // 1: raft.UAVInfo
	(*Task)(nil),                  // 2: raft.Task
	(*Position)(nil),              // 3: raft.Position
	(*Battery)(nil),               // 4: raft.Battery
	(*CPUInfo)(nil),               // 5: raft.CPUInfo
	(*MemoryInfo)(nil),            // 6: raft.MemoryInfo
	(*NetWorkInfo)(nil),           // 7: raft.NetWorkInfo
	(*SendUAVInfoResp)(nil),       // 8: raft.SendUAVInfoResp
	(*AppendLogReq)(nil),          // 9: raft.AppendLogReq
	(*LogsInfo)(nil),              // 10: raft.LogsInfo
	(*AppendLogResp)(nil),         // 11: raft.AppendLogResp
	(*VoteReq)(nil),               // 12: raft.VoteReq
	(*VoteResp)(nil),              // 13: raft.VoteResp
	(*GlobalLoadBalanceReq)(nil),  // 14: raft.GlobalLoadBalanceReq
	(*GlobalLoadBalanceResp)(nil), // 15: raft.GlobalLoadBalanceResp
	nil,                           // 16: raft.Task.CostEntry
	nil,                           // 17: raft.LogsInfo.UavMapEntry
}
var file_internal_rpc_proto_raft_proto_depIdxs = []int32{
	1,  // 0: raft.SendUAVInfoReq.uav:type_name -> raft.UAVInfo
	3,  // 1: raft.UAVInfo.position:type_name -> raft.Position
	4,  // 2: raft.UAVInfo.battery:type_name -> raft.Battery
	5,  // 3: raft.UAVInfo.cpu:type_name -> raft.CPUInfo
	6,  // 4: raft.UAVInfo.memory:type_name -> raft.MemoryInfo
	7,  // 5: raft.UAVInfo.network:type_name -> raft.NetWorkInfo
	2,  // 6: raft.UAVInfo.tasks:type_name -> raft.Task
	16, // 7: raft.Task.cost:type_name -> raft.Task.CostEntry
	3,  // 8: raft.Task.target:type_name -> raft.Position
	10, // 9: raft.AppendLogReq.logs:type_name -> raft.LogsInfo
	17, // 10: raft.LogsInfo.uav_map:type_name -> raft.LogsInfo.UavMapEntry
	2,  // 11: raft.GlobalLoadBalanceReq.task_list:type_name -> raft.Task
	1,  // 12: raft.LogsInfo.UavMapEntry.value:type_name -> raft.UAVInfo
	0,  // 13: raft.RaftService.SendUAVInfo:input_type -> raft.SendUAVInfoReq
	9,  // 14: raft.RaftService.AppendLog:input_type -> raft.AppendLogReq
	12, // 15: raft.RaftService.Vote:input_type -> raft.VoteReq
	14, // 16: raft.RaftService.GlobalLoadBalance:input_type -> raft.GlobalLoadBalanceReq
	8,  // 17: raft.RaftService.SendUAVInfo:output_type -> raft.SendUAVInfoResp
	11, // 18: raft.RaftService.AppendLog:output_type -> raft.AppendLogResp
	13, // 19: raft.RaftService.Vote:output_type -> raft.VoteResp
	15, // 20: raft.RaftService.GlobalLoadBalance:output_type -> raft.GlobalLoadBalanceResp
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_internal_rpc_proto_raft_proto_init() }
func file_internal_rpc_proto_raft_proto_init() {
	if File_internal_rpc_proto_raft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_rpc_proto_raft_proto_rawDesc), len(file_internal_rpc_proto_raft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_rpc_proto_raft_proto_goTypes,
		DependencyIndexes: file_internal_rpc_proto_raft_proto_depIdxs,
		MessageInfos:      file_internal_rpc_proto_raft_proto_msgTypes,
	}.Build()
	File_internal_rpc_proto_raft_proto = out.File
	file_internal_rpc_proto_raft_proto_goTypes = nil
	file_internal_rpc_proto_raft_proto_depIdxs = nil
}
